{"version":3,"file":"review-service.js","sources":["inputJS/review-service.js"],"sourcesContent":["// import envConfiguration from './Config/config';\r\n// envConfiguration();\r\n\r\n/**\r\n *Function to normalize the payload receive in the review request call and the creation of the analyze text.\r\n *\r\n * @param {*} reviewResult\r\n */\r\nfunction renderAnalyzeReview(reviewResult) {\r\n  const divUpperFeedback = document.getElementById('upper-part-feedback');\r\n\r\n  // To clean the div;\r\n  const range = document.createRange();\r\n  range.selectNodeContents(divUpperFeedback);\r\n  range.deleteContents();\r\n\r\n  let aspectSerializer = [];\r\n\r\n  // I don't think this cart is beautiful\r\n  reviewResult.sentiment_analysis.sentence_list.forEach(sentence_list => {\r\n    console.log('sentence_list :', sentence_list);\r\n\r\n    sentence_list.segment_list.forEach(segment_list => {\r\n      console.log('segment_list :', segment_list);\r\n\r\n      segment_list.polarity_term_list.forEach(polarity_term_list => {\r\n        console.log('polarity_term_list :', polarity_term_list);\r\n        let typeOfAspect = 'NEU';\r\n\r\n        if (\r\n          polarity_term_list.score_tag === 'P' ||\r\n          polarity_term_list.score_tag === 'P+'\r\n        ) {\r\n          typeOfAspect = 'positive';\r\n        } else if (\r\n          polarity_term_list.score_tag === 'N' ||\r\n          polarity_term_list.score_tag === 'N+'\r\n        ) {\r\n          typeOfAspect = 'negative';\r\n        }\r\n\r\n        aspectSerializer.push({\r\n          term: polarity_term_list.text,\r\n          typeOfAspect,\r\n        });\r\n\r\n        if (polarity_term_list.sentimented_concept_list) {\r\n          polarity_term_list.sentimented_concept_list.forEach(\r\n            sentimented_concept_list => {\r\n              aspectSerializer.push({\r\n                term: sentimented_concept_list.variant,\r\n                typeOfAspect: 'aspect',\r\n              });\r\n            },\r\n          );\r\n        }\r\n      });\r\n\r\n      if (segment_list.sentimented_concept_list) {\r\n        segment_list.sentimented_concept_list.forEach(\r\n          sentimented_concept_list => {\r\n            aspectSerializer.push({\r\n              term: sentimented_concept_list.variant,\r\n              typeOfAspect: 'aspect',\r\n            });\r\n          },\r\n        );\r\n      }\r\n    });\r\n  });\r\n\r\n  reviewResult.text.split(' ').forEach(element => {\r\n    const newP = document.createElement('p');\r\n    const text = document.createTextNode(element);\r\n    newP.appendChild(text);\r\n\r\n    aspectSerializer.forEach(serializeAspect => {\r\n      if (\r\n        serializeAspect.term.toUpperCase() === element.toUpperCase() &&\r\n        serializeAspect.term !== 'NEU'\r\n      ) {\r\n        newP.classList.add(serializeAspect.typeOfAspect);\r\n      }\r\n    });\r\n\r\n    divUpperFeedback.appendChild(newP);\r\n  });\r\n}\r\n\r\n/**\r\n * Function to listen to submissions of example reviews\r\n */\r\nfunction analyzeDataSubmitListener() {\r\n  document\r\n    .getElementById('analyze-form')\r\n    .addEventListener('submit', function(event) {\r\n      event.preventDefault();\r\n\r\n      const textArea = event.target[0];\r\n\r\n      if (textArea.value === '') {\r\n        textArea.classList.add('animated', 'shake');\r\n        setTimeout(() => {\r\n          textArea.classList.remove('animated', 'shake');\r\n        }, 1000);\r\n        return;\r\n      }\r\n\r\n      const postParams = Object.assign(\r\n        {},\r\n        {\r\n          text: textArea.value,\r\n        },\r\n      );\r\n\r\n      axios\r\n        .post(`documents`, postParams)\r\n        .then(function(response) {\r\n          renderAnalyzeReview(response.data);\r\n          document.getElementById('feedback-text').classList.remove('hidden');\r\n          document\r\n            .getElementById('feedback-text')\r\n            .classList.add('animated', 'fadeInUp');\r\n          textArea.value = '';\r\n        })\r\n        .catch(function(error) {\r\n          throw new Error(error);\r\n        });\r\n    });\r\n}\r\n\r\nanalyzeDataSubmitListener();\r\n"],"names":["document","getElementById","addEventListener","event","preventDefault","textArea","target","value","classList","add","setTimeout","remove","postParams","Object","assign","text","axios","post","then","response","reviewResult","divUpperFeedback","range","createRange","selectNodeContents","deleteContents","aspectSerializer","sentiment_analysis","sentence_list","forEach","console","log","segment_list","polarity_term_list","typeOfAspect","score_tag","push","term","sentimented_concept_list","variant","split","element","newP","createElement","createTextNode","appendChild","serializeAspect","toUpperCase","renderAnalyzeReview","data","catch","error","Error"],"mappings":"yBA6FEA,SACGC,eAAe,gBACfC,iBAAiB,SAAU,SAASC,GACnCA,EAAMC,iBAEN,MAAMC,EAAWF,EAAMG,OAAO,GAE9B,GAAuB,KAAnBD,EAASE,MAKX,OAJAF,EAASG,UAAUC,IAAI,WAAY,cACnCC,WAAW,KACTL,EAASG,UAAUG,OAAO,WAAY,UACrC,KAIL,MAAMC,EAAaC,OAAOC,OACxB,GACA,CACEC,KAAMV,EAASE,QAInBS,MACGC,KAAK,YAAaL,GAClBM,KAAK,SAASC,IA7GvB,SAA6BC,GAC3B,MAAMC,EAAmBrB,SAASC,eAAe,uBAG3CqB,EAAQtB,SAASuB,cACvBD,EAAME,mBAAmBH,GACzBC,EAAMG,iBAEN,IAAIC,EAAmB,GAGvBN,EAAaO,mBAAmBC,cAAcC,QAAQD,IACpDE,QAAQC,IAAI,kBAAmBH,GAE/BA,EAAcI,aAAaH,QAAQG,IACjCF,QAAQC,IAAI,iBAAkBC,GAE9BA,EAAaC,mBAAmBJ,QAAQI,IACtCH,QAAQC,IAAI,uBAAwBE,GACpC,IAAIC,EAAe,MAGgB,MAAjCD,EAAmBE,WACc,OAAjCF,EAAmBE,UAEnBD,EAAe,WAEkB,MAAjCD,EAAmBE,WACc,OAAjCF,EAAmBE,YAEnBD,EAAe,YAGjBR,EAAiBU,KAAK,CACpBC,KAAMJ,EAAmBlB,KACzBmB,aAAAA,IAGED,EAAmBK,0BACrBL,EAAmBK,yBAAyBT,QAC1CS,IACEZ,EAAiBU,KAAK,CACpBC,KAAMC,EAAyBC,QAC/BL,aAAc,eAOpBF,EAAaM,0BACfN,EAAaM,yBAAyBT,QACpCS,IACEZ,EAAiBU,KAAK,CACpBC,KAAMC,EAAyBC,QAC/BL,aAAc,iBAQ1Bd,EAAaL,KAAKyB,MAAM,KAAKX,QAAQY,IACnC,MAAMC,EAAO1C,SAAS2C,cAAc,KAC9B5B,EAAOf,SAAS4C,eAAeH,GACrCC,EAAKG,YAAY9B,GAEjBW,EAAiBG,QAAQiB,IAErBA,EAAgBT,KAAKU,gBAAkBN,EAAQM,eACtB,QAAzBD,EAAgBT,MAEhBK,EAAKlC,UAAUC,IAAIqC,EAAgBZ,gBAIvCb,EAAiBwB,YAAYH,KAiCvBM,CAAoB7B,EAAS8B,MAC7BjD,SAASC,eAAe,iBAAiBO,UAAUG,OAAO,UAC1DX,SACGC,eAAe,iBACfO,UAAUC,IAAI,WAAY,YAC7BJ,EAASE,MAAQ,KAElB2C,MAAM,SAASC,GACd,MAAM,IAAIC,MAAMD"}